apiVersion: v1
kind: Service
metadata:
  name: manual-rp-service
  labels:
    app: node
spec:
  type: {{ .Values.app.service.type }}
  ports:
    - port: {{ .Values.app.service.port }}
      targetPort: {{ .Values.app.service.port }}
      protocol: TCP
      name: http
  selector:
    app: node
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manual-rp-deployment
  labels:
    app: node
spec:
  {{- if not .Values.app.autoscaling.enabled }}
  replicas: {{ .Values.app.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: node
  template:
    metadata:
      annotations:
        vault.hashicorp.com/role: {{ .Values.secret.role }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/agent-pre-populate-only: 'true'

        vault.hashicorp.com/agent-inject-secret-{{ .Values.mongo.secret.name }}: {{ .Values.mongo.secret.path }}
        vault.hashicorp.com/agent-inject-template-{{ .Values.mongo.secret.name }}: |
          {{ "{{" }} with secret "{{ .Values.mongo.secret.path }}" -{{ "}}" }}
            export dbUrl="mongodb://{{ "{{" }} .Data.username {{ "}}" }}:{{ "{{" }} .Data.password {{ "}}" }}@{{ .Values.mongo.service.name }}:27017"
          {{ "{{" }}- end {{ "}}" }}

        vault.hashicorp.com/agent-inject-secret-{{ .Values.app.secret.name }}: {{ .Values.app.secret.path }}
        vault.hashicorp.com/agent-inject-template-{{ .Values.app.secret.name }}: |
          {{ "{{" }} with secret "{{ .Values.app.secret.path }}" -{{ "}}" }}
            export apiKey="{{ "{{" }} .Data.apiKey {{ "}}" }}"
          {{ "{{" }}- end {{ "}}" }}
      labels:
        app: node
    spec:
      serviceAccountName: {{ .Values.app.serviceaccount.name }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          command: ["/bin/sh"]
          args:
            ['-c', 'source /vault/secrets/{{ .Values.app.secret.name }} && source /vault/secrets/{{ .Values.mongo.secret.name }} && npm run start:fnw']
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.service.port }}
              protocol: TCP
          env:
            - name: DYNAMIC_IMAGE
              valueFrom:
                configMapKeyRef:
                  name: manual-rp-configmap
                  key: DYNAMIC_IMAGE